@import url('https://fonts.googleapis.com/css2?family=Blinker:wght@400;700;900&family=Source+Sans+Pro&display=swap');

body {
  min-height: 100vh;
  margin: 0;
  display: flex;
  justify-content: center;
  align-items: center;
}
.card {
  width: 90%;
  /* margin: 0 auto; */
  max-width: 800px;
  background-color: #111d4A;
  color: #fff;

  /* align-items:stretch is default that's why align-items is stretching our image in start. */
  display: flex;
  flex-direction: column;
}

.card-img {
  /* i didn't use object fit, i used background images */
  object-fit: cover;
  flex-basis: 200px;
  min-width: 0;
  min-height: 0;
  background: yellow;

  /* flex-basis also cause some problems with images in some browsers
     to change that we add min-width: 0; if we are handling width with flex-basis
     and we add min-height: 0; if we are handling height with flex-basis.
     If we are handling both height and width with flex-basis then we add both min-width
     and min-height of 0.*/

  /* to set image height and width we can use width and height in media queries.
     but we'll use flex-basis instead to change image's height and width. 
     flex-basis works on cross axis. So, when flex is column it'll affect our width
     and on bigger screens when our flex is column flex-basis will affect our height. */
  /* height: 150px; */
}



/* start with typography because after layout sizes might change the layout */
/* ===============
    TYPOGRAPHY
   =============== */

.card-title,
.card-read-more,
.card-btn {
  font-family: 'Blinker',sans-serif;
}
.card-title {
  color: #05cbe9;
  font-size: 1.75rem;
  margin: 0;
}

.card-body {
  font-size: 1rem;
  font-family: 'Source Sans Pro';
  line-height: 1.25rem;
}

.card-footer {
  display: flex;
  
  justify-content: space-between;
  /* i used align-items to remove stretch on button */
  /* align-items: center; */
  align-items: flex-end;
  /* We could add flex and align-items or use margin to place a space between body and footer. But we will use simpler approach. It's not the best but it'll do for this project.  */
  margin-top: 2em;
}

.card-btn {
  font-size: 1.25rem;
  background: #05cbe9;
  color: #111d4A;
  text-decoration: none;
  font-weight: 700;
  letter-spacing: 1px;
  padding: .35em 1em;
}

.card-read-time {
  margin: 0;
  font-family: 'Blinker',sans-serif;
  opacity: .6;
  line-height: 1;
}

.card-read-time span {
  font-weight: 700;
  /* display block will push text after 15 to the new line. But it's very different from actually adding the line break after 15, because line break also adds to the height of button when i tried to do it in my attempt. I might have done something else wrong. */
  display: block;
  /* we used em here because we need 15 to be bigger than the other text, if we use em it'll always be bigger than the other text. It is very specific condition in which we use em instead of rems. */
  font-size: 1.25em;
}



@media (min-width: 600px) {
  .card {
    flex-direction: row;
  }
  .card-img {
    height: 300px;
  }


  /* to align the footer to all the way to the bottom when on bigger screens we can use align-items flex-end but it would not work because it works on cross axis.
     also if we try margin-top: auto; it would not work because it would work only on direct child. we'll make the parent flex and then apply styles. */
  .card-content {
    display: flex;
    flex-direction: column;
  }

  .card-footer {
    margin-top: auto;
  }
  
  /* .card-img {
    width: 150px;
  } */
}

.card-title {
  font-size: 2.25rem;
}
.card-body {
  font-size: 1.125rem;
  max-width: 500px;
}

.card-content {
  padding: 1em;
}