* {
  box-sizing: border-box;
}

body {
  margin: 0;
  background: #2c73d2;
  color: #fff;
  text-align: center;
}

.flex-container {
  border: 10px solid #f9f871;
  margin: 0 auto;
  padding: .25em;
  width: 80%;

  display: flex;
  height: 50vh;
  /* justify-content: center;
  align-content: flex-start; /*it applies on all the rows collectively*/
  /* align-items: baseline; it applies within individual rows */ 
  /*align items default is stretch, it stretches the flex items to fill all the available space*/
  /* flex-flow: column wrap; flex-flow: direction wrap; This is a short hand for direction and wrap*/
  /* flex-wrap: wrap; */
  /* flex-direction: column; */
  /* flex-direction: row-reverse; */
  /* flex-direction: column-reverse; */
}

/* .big {
  font-size: 2em;
} */

.flex-item {
  background: #8bee86;
  margin: .5em;
  padding: .5em;
  color: #424656;
  width: 200px;
}

.flex-item-1 {
  background-color: pink;
  /* align-self: is used on a single flex-item unlike align-items  . */
  align-self: flex-start;
  /*flex-grow: 1;*/ /*it tells the element to grow and take up all the available space.*/
}
.flex-item-2 {
  /* flex-grow: 1;  */
}


/* Flex basis property, it will set the height/width of the flex-item according to the flex-direction, i.e width/height property that's along the flex-direction. If flex-direction is row, it'll affect width, if flex-directiton is column it'll affect height. Flex-basis is an ideal width/height. We can also use it in media queries when we change the direction of flex the flex-item will go from having width of 200px to have height of 200px. It'll also overwrite the width/height property depending on the main axis. */

/* flex: grow shrink basis */
/* flex: 0 1 auto; this is default */
/* flex: 1; it means  */
/* flex: initial; changes all things to default */
/* flex: auto; it's flex: 1 1 auto; */