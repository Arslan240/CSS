* {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: 'Montserrat', sans-serif;
  font-size: 1rem;
  color: #404040;
  line-height: 1.6;
}

/* ======================
     TYPOGRAPHY
   ====================== */

h1, h2, strong {
  font-weight: 700;
}

.accent-color {
  color: #ffe600;
}

.hero-title {
  font-size: 1.5rem;
  line-height: 1.4;
  margin-bottom: 0;
}

.section-title {
  font-size: 1.125rem;
  color: #000;
  margin-top: 1.25em;
}

/* button */
.btn {
  padding: .5em 1.5em;
  font-weight: 700;
  text-decoration: none;
  margin-top: .5em;
}

.btn-primary {
  background: #ffe600;
  color: #000;
  /* becz this button is a grid item, we can left align it by justify self: start; */
  justify-self: start;
}

/* ======================
     GENERAL LAYOUT
   ====================== */

.main-grid {
  display: grid;
  /* We wan to have our content in the middle of the page, to do that with grid, we can use three columns and place our content in middle column which have max-width to limit its growth. Other columns on left and right have 1fr max-width so they'll always grow if space is avaialable. */
  grid-template-columns: minmax(1em, 1fr) minmax(0px, 500px) minmax(1em, 1fr);
  gap: 0 2em;
}

@media (min-width: 600px) {
  .main-grid {
    grid-template-columns: minmax(1em, 1fr) repeat(3, minmax(150px, 320px)) minmax(1em, 1fr);
  }
}

/* footer */

.footer {
  background-color: #ebebeb;
  padding: 4em 0;
  text-align: center;

  /* for small screen sizes */
  grid-template-areas: 
  ". social ."
  ". main .";
}

.footer-main,
.social-list {
  grid-column: 2 / -2;

}

.footer-logo,
.footer-text,
.footer-fineprint {
  opacity: .3;
} 

.footer-main {
  grid-area: main;
}

.footer-fineprint {
   font-size: .75rem;
   margin-top: 4em;
}

.social-list {
  /* grid-row: 1 / 2; */
  /* to place our icons before the text, we can use grid-row to move them or order: -1; property can also be used  just like in flexbox.*/
  /* order: -1; */
  grid-area: social;
  list-style: none;
  padding: 0;
  margin: 0 0 2em;
  display: flex;
  justify-content: center;
}

.social-link {
  color: #000;
  font-size: 1.75rem;
  margin: 0 .5em;
}
.social-link:hover {
  color: #777;
}

@media (min-width: 600px) {
  .footer {
    grid-template-areas: 
    ". main main social .";
  }

  .footer-main {
    text-align: left;
  }

  .social-list {
    justify-content: flex-end;
  }
}

/* ======================
     HERO AREA
   ====================== */

.hero {
  
  background-image: url("img/hero-bg.jpg");
  background-size: cover;
  color: #fff;
  padding: 4em 0;
}

.hero > * {
  /* Anything which is direct child of hero, will span one column which is middle one from the three columns we set up earlier. */
  grid-column: 2 / -2;
}

@media (min-width: 600px) {
  .hero {
    padding: 6em 0;
    /* it could be other than bottom, it's just according to the image. */
    background-position: bottom;
  }
  .hero > * {
    grid-column: 2 / span 2;
  }
}

/* ======================
     INFO AREA
   ====================== */

.info {
  padding: 4em 0;
  text-align: center;
}

.col {
  /* we set all of our columns in the middle column */
  grid-column: 2 / -2;
}

@media (min-width: 600px) {
  .col {
    grid-column: span 1;
  }

  .col:first-child {
    grid-column: 2 / span 1;
  }
}